name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '*.md'
      - 'api/v1/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"
  GO_VERSION: "1.24"

jobs:
  # =============================================================================
  # Build Documentation
  # =============================================================================
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Documentation Dependencies
        run: |
          pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-mermaid2-plugin
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-minify-plugin

      - name: Install Controller Tools
        run: |
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest

      - name: Generate CRD Documentation
        run: |
          mkdir -p docs/api/generated
          
          # Generate CRDs
          controller-gen crd:maxDescLen=0 paths="./api/v1/..." output:crd:artifacts:config=docs/api/generated/crds
          
          # Generate API documentation
          if [ -d "docs/api/generated/crds" ]; then
            for crd_file in docs/api/generated/crds/*.yaml; do
              if [ -f "$crd_file" ]; then
                filename=$(basename "$crd_file" .yaml)
                echo "# ${filename} CRD Reference" > "docs/api/${filename}.md"
                echo "" >> "docs/api/${filename}.md"
                echo '```yaml' >> "docs/api/${filename}.md"
                cat "$crd_file" >> "docs/api/${filename}.md"
                echo '```' >> "docs/api/${filename}.md"
              fi
            done
          fi

      - name: Validate Documentation
        run: |
          # Check for broken internal links
          find docs -name "*.md" -exec grep -l "](\./" {} \; | while read -r file; do
            echo "Checking internal links in $file"
            grep "](\./" "$file" || true
          done

      - name: Build Documentation Site
        run: |
          export SITE_URL="${{ steps.pages.outputs.base_url }}"
          mkdocs build --clean --strict

      - name: Upload Documentation Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # =============================================================================
  # Deploy to GitHub Pages
  # =============================================================================
  deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # =============================================================================
  # Validate Links
  # =============================================================================
  link-check:
    name: Link Validation
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Wait for Deployment
        run: sleep 30

      - name: Check Links
        uses: lycheeverse/lychee-action@v1.9.3
        with:
          args: |
            --verbose
            --no-progress
            --accept 200,201,202,204,206,300,301,302,303,304,307,308,429
            ${{ needs.deploy.outputs.page_url }}
          fail: false