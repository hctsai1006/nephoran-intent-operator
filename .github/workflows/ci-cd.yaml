name: CI/CD Pipeline

on:  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *' # daily
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flake8
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2

      - name: Run Go linter
        run: golangci-lint run ./... --timeout=5m

      - name: Run Python linter
        run: flake8 pkg/rag/

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Run Go tests
        run: go test -v ./...

      # Add Python tests here if any are created

  build-and-push:
    name: Build and Push Docker Images
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [llm-processor, nephio-bridge, oran-adaptor, rag-api]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./.devcontainer/Dockerfile # Assuming a single Dockerfile for all
          push: true
          tags: your-dockerhub-username/${{ matrix.service }}:latest
