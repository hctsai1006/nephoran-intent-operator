name: Dependency Updates

on:
  schedule:
    - cron: '0 12 * * MON'  # Weekly on Monday at 12:00 UTC
  workflow_dispatch:
  pull_request:
    paths:
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/dependabot.yml'

env:
  GO_VERSION: '1.24'

jobs:
  # =============================================================================
  # Go Dependencies
  # =============================================================================
  go-deps:
    name: Go Dependencies Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Update Go Dependencies
        run: |
          # Update all dependencies to latest minor/patch versions
          go get -u all
          go mod tidy
          go mod verify

      - name: Run Tests After Update
        run: |
          go test ./... -short
          go vet ./...

      - name: Check for Changes
        id: changes
        run: |
          if git diff --quiet go.mod go.sum; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No dependency updates available"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Dependency updates found"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true' && github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update go dependencies'
          title: 'chore(deps): update go dependencies'
          body: |
            ## 📦 Automated Dependency Updates

            This PR updates Go dependencies to their latest compatible versions.

            ### Changes
            - Updated Go modules in go.mod
            - Refreshed go.sum with new checksums

            ### Verification
            - ✅ All tests pass
            - ✅ go vet checks pass
            - ✅ go mod verify passes

            ### Review Notes
            Please review the dependency changes and ensure no breaking changes are introduced.

            **Auto-generated by dependency update workflow**
          branch: chore/update-go-dependencies
          delete-branch: true

  # =============================================================================
  # GitHub Actions
  # =============================================================================
  actions-deps:
    name: GitHub Actions Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update GitHub Actions
        run: |
          # Find all workflow files
          find .github/workflows -name "*.yml" -o -name "*.yaml" | while read -r workflow; do
            echo "Checking $workflow for action updates..."
            
            # Update common actions to latest versions
            sed -i 's|actions/checkout@v[0-9]*|actions/checkout@v4|g' "$workflow"
            sed -i 's|actions/setup-go@v[0-9]*|actions/setup-go@v5|g' "$workflow"
            sed -i 's|actions/setup-python@v[0-9]*|actions/setup-python@v5|g' "$workflow"
            sed -i 's|actions/setup-node@v[0-9]*|actions/setup-node@v4|g' "$workflow"
            sed -i 's|actions/upload-artifact@v[0-9]*|actions/upload-artifact@v4|g' "$workflow"
            sed -i 's|actions/download-artifact@v[0-9]*|actions/download-artifact@v4|g' "$workflow"
            sed -i 's|docker/setup-buildx-action@v[0-9]*|docker/setup-buildx-action@v3|g' "$workflow"
            sed -i 's|docker/build-push-action@v[0-9]*|docker/build-push-action@v5|g' "$workflow"
            sed -i 's|docker/login-action@v[0-9]*|docker/login-action@v3|g' "$workflow"
            sed -i 's|github/codeql-action/[^@]*@v[0-9]*|github/codeql-action/upload-sarif@v3|g' "$workflow"
          done

      - name: Check for Changes
        id: changes
        run: |
          if git diff --quiet .github/workflows/; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No GitHub Actions updates available"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "GitHub Actions updates found"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true' && github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(ci): update github actions to latest versions'
          title: 'chore(ci): update github actions to latest versions'
          body: |
            ## ⚡ GitHub Actions Updates

            This PR updates GitHub Actions to their latest stable versions.

            ### Updated Actions
            - actions/checkout → v4
            - actions/setup-go → v5
            - actions/setup-python → v5
            - actions/setup-node → v4
            - actions/upload-artifact → v4
            - actions/download-artifact → v4
            - docker/setup-buildx-action → v3
            - docker/build-push-action → v5
            - docker/login-action → v3
            - github/codeql-action → v3

            ### Benefits
            - 🚀 Latest features and improvements
            - 🔒 Security updates
            - 🐛 Bug fixes
            - ⚡ Performance improvements

            **Auto-generated by dependency update workflow**
          branch: chore/update-github-actions
          delete-branch: true

  # =============================================================================
  # Container Base Images
  # =============================================================================
  container-deps:
    name: Container Base Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Base Image Updates
        run: |
          echo "Checking for base image updates..."
          
          # Check Go base image updates
          if [ -f "Dockerfile" ]; then
            # Get current Go version from Dockerfile
            CURRENT_GO=$(grep -E "^FROM.*golang:" Dockerfile | head -1 | sed 's/.*golang:\([^-]*\).*/\1/')
            echo "Current Go version in Dockerfile: $CURRENT_GO"
            
            # Get latest Go version (simplified check)
            LATEST_GO="1.24"
            echo "Latest recommended Go version: $LATEST_GO"
            
            if [ "$CURRENT_GO" != "$LATEST_GO" ]; then
              sed -i "s|golang:$CURRENT_GO|golang:$LATEST_GO|g" Dockerfile
              echo "Updated Dockerfile Go version to $LATEST_GO"
            fi
          fi
          
          # Check Python base image in rag-python directory
          if [ -f "rag-python/Dockerfile" ]; then
            echo "Checking Python base image..."
            # Update to latest Python 3.11 slim
            sed -i 's|python:[0-9.]*-slim|python:3.11-slim|g' rag-python/Dockerfile
          fi

      - name: Check for Changes
        id: changes
        run: |
          if git diff --quiet Dockerfile rag-python/Dockerfile 2>/dev/null; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No container base image updates needed"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Container base image updates found"
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true' && github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(docker): update base images to latest versions'
          title: 'chore(docker): update base images to latest versions'
          body: |
            ## 🐳 Container Base Image Updates

            This PR updates container base images to their latest stable versions.

            ### Updates
            - Updated Go base image to latest version
            - Updated Python base image to latest version
            - Maintained security-focused slim variants

            ### Security Benefits
            - 🔒 Latest security patches
            - 🐛 Bug fixes
            - 📦 Updated system packages

            ### Verification Required
            Please ensure:
            - [ ] All containers build successfully
            - [ ] No breaking changes introduced
            - [ ] Security scans pass

            **Auto-generated by dependency update workflow**
          branch: chore/update-base-images
          delete-branch: true

  # =============================================================================
  # Summary
  # =============================================================================
  summary:
    name: Dependency Update Summary
    runs-on: ubuntu-latest
    needs: [go-deps, actions-deps, container-deps]
    if: always()
    steps:
      - name: Generate Summary
        run: |
          echo "## 📋 Dependency Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Changes |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Go Dependencies | ${{ needs.go-deps.result }} | ${{ needs.go-deps.outputs.changes || 'No changes' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Actions | ${{ needs.actions-deps.result }} | ${{ needs.actions-deps.outputs.changes || 'No changes' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Container Images | ${{ needs.container-deps.result }} | ${{ needs.container-deps.outputs.changes || 'No changes' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.go-deps.result }}" == "success" && 
                "${{ needs.actions-deps.result }}" == "success" && 
                "${{ needs.container-deps.result }}" == "success" ]]; then
            echo "✅ **All dependency checks completed successfully**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some dependency checks failed - please review**" >> $GITHUB_STEP_SUMMARY
          fi