name: Deploy CRD Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/crd-reference/**'
      - 'api/v1/**'
      - '.github/workflows/docs.yaml'
  pull_request:
    paths:
      - 'docs/crd-reference/**'
      - 'api/v1/**'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to GitHub Pages'
        required: false
        default: 'false'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'docs/crd-reference/requirements.txt'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install controller-gen
        run: |
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install dependencies
        working-directory: docs/crd-reference
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate CRD documentation
        run: |
          controller-gen crd:maxDescLen=0 paths="./api/v1/..." output:crd:artifacts:config=docs/crd-reference/generated/crds
          
      - name: Build documentation
        working-directory: docs/crd-reference
        run: mkdocs build --strict --verbose

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/crd-reference/site

  deploy:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event.inputs.deploy == 'true')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install validation tools
        run: |
          pip install yamllint
          pip install markdownlint-cli2

      - name: Validate YAML files
        run: |
          find docs/crd-reference -name '*.yaml' -o -name '*.yml' | xargs yamllint

      - name: Validate Markdown files
        run: |
          npx markdownlint-cli2 "docs/crd-reference/**/*.md"

      - name: Check broken links
        working-directory: docs/crd-reference
        run: |
          pip install linkchecker
          mkdocs build
          linkchecker site/index.html --check-extern