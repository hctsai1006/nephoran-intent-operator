{{- if .Values.llmProcessor.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nephoran-operator.fullname" . }}-llm-processor
  labels:
    {{- include "nephoran-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: llm-processor
spec:
  replicas: {{ .Values.llmProcessor.replicaCount }}
  selector:
    matchLabels:
      {{- include "nephoran-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: llm-processor
  template:
    metadata:
      labels:
        {{- include "nephoran-operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: llm-processor
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nephoran-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.llmProcessor.podSecurityContext | nindent 8 }}
      containers:
        - name: llm-processor
          securityContext:
            {{- toYaml .Values.llmProcessor.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}{{ .Values.llmProcessor.image.repository }}:{{ .Values.llmProcessor.image.tag }}"
          imagePullPolicy: {{ .Values.llmProcessor.image.pullPolicy }}
          command: ["/llm-processor"]
          args:
            {{- if .Values.rag.enabled }}
            - "--rag-service-url={{ .Values.llmProcessor.ragService.url }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.llmProcessor.service.targetPort }}
              protocol: TCP
          env:
            # Service configuration
            - name: PORT
              value: "{{ .Values.llmProcessor.service.targetPort }}"
            - name: LOG_LEVEL
              value: "{{ .Values.llmProcessor.logLevel | default "info" }}"
            
            # Feature flags
            - name: RAG_ENABLED
              value: "{{ .Values.rag.enabled }}"
            - name: ML_ENABLED
              value: "{{ .Values.ml.enabled }}"
            
            # Metrics security configuration
            - name: EXPOSE_METRICS_PUBLICLY
              value: "{{ .Values.llmProcessor.metrics.exposePublicly }}"
            - name: METRICS_ALLOWED_CIDRS
              value: "{{ join "," .Values.llmProcessor.metrics.allowedCIDRs }}"
            
            # OpenAI API credentials (from SOPS-encrypted secret)
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: openai-api-key
            - name: OPENAI_API_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: openai-api-base
            - name: OPENAI_MODEL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: openai-model
            
            # Alternative LLM providers (optional)
            {{- if .Values.llmProcessor.providers.anthropic.enabled }}
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: anthropic-api-key
            {{- end }}
            
            {{- if .Values.llmProcessor.providers.azure.enabled }}
            - name: AZURE_OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: azure-openai-api-key
            - name: AZURE_OPENAI_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: azure-openai-endpoint
            {{- end }}
            
            # Git credentials (from SOPS-encrypted secret)
            {{- if .Values.git.enabled }}
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKeys.name | default "nephoran-api-keys" }}
                  key: github-token
            {{- end }}
            
            # JWT signing key (from SOPS-encrypted secret)
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.auth.name | default "nephoran-auth-secrets" }}
                  key: jwt-signing-key
            
            # Database credentials (if needed)
            {{- if .Values.llmProcessor.database.enabled }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database.name | default "nephoran-database-credentials" }}
                  key: postgres-connection-string
            {{- end }}
          {{- if .Values.llmProcessor.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.llmProcessor.healthCheck.livenessProbe.httpGet.path }}
              port: {{ .Values.llmProcessor.healthCheck.livenessProbe.httpGet.port }}
            failureThreshold: {{ .Values.llmProcessor.healthCheck.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.llmProcessor.healthCheck.livenessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.llmProcessor.healthCheck.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.llmProcessor.healthCheck.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.llmProcessor.healthCheck.readinessProbe.httpGet.path }}
              port: {{ .Values.llmProcessor.healthCheck.readinessProbe.httpGet.port }}
            failureThreshold: {{ .Values.llmProcessor.healthCheck.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.llmProcessor.healthCheck.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.llmProcessor.healthCheck.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.llmProcessor.healthCheck.readinessProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.llmProcessor.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            # Mount TLS certificates for mTLS
            {{- if .Values.security.mtls.enabled }}
            - name: mtls-certs
              mountPath: /etc/tls/client
              readOnly: true
            - name: ca-cert
              mountPath: /etc/tls/ca
              readOnly: true
            {{- end }}
            # Mount service account token for Kubernetes API access
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.security.mtls.enabled }}
        - name: mtls-certs
          secret:
            secretName: {{ .Values.secrets.mtls.name | default "nephoran-mtls-certificates" }}
            items:
              - key: llm-processor-client.crt
                path: client.crt
              - key: llm-processor-client.key
                path: client.key
                mode: 0400
        - name: ca-cert
          secret:
            secretName: {{ .Values.secrets.mtls.name | default "nephoran-mtls-certificates" }}
            items:
              - key: ca.crt
                path: ca.crt
        {{- end }}
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 3600
                  audience: api
      {{- with .Values.llmProcessor.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.llmProcessor.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.llmProcessor.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}