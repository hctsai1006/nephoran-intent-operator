# Complete Kubernetes deployment for Certificate Automation System
# Includes all components: automation engine, service discovery, health checker, etc.

---
apiVersion: v1
kind: Namespace
metadata:
  name: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nephoran-cert-automation
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
rules:
# Certificate and secret management
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Service discovery
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch", "update", "patch"]
# Ingress for certificate provisioning
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "update", "patch"]
# cert-manager integration
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Events for audit logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
# Admission webhook configuration
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionconfigurations", "mutatingadmissionconfigurations"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nephoran-cert-automation
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nephoran-cert-automation
subjects:
- kind: ServiceAccount
  name: nephoran-cert-automation
  namespace: nephoran-system

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nephoran-cert-automation-config
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
data:
  config.yaml: |
    # Certificate Automation Configuration
    automation_config:
      provisioning_enabled: true
      auto_inject_certificates: true
      service_discovery_enabled: true
      provisioning_workers: 5
      provisioning_timeout: 300s
      
      renewal_enabled: true
      renewal_threshold: 720h  # 30 days
      renewal_workers: 3
      renewal_window: 24h
      graceful_renewal_enabled: true
      
      validation_enabled: true
      realtime_validation: true
      chain_validation_enabled: true
      validation_cache_size: 10000
      validation_cache_ttl: 1h
      
      revocation_enabled: true
      crl_check_enabled: true
      ocsp_check_enabled: true
      revocation_cache_size: 5000
      revocation_cache_ttl: 30m
      
      batch_size: 10
      max_concurrent_operations: 50
      operation_timeout: 120s
      retry_attempts: 3
      retry_backoff: 5s
      
      kubernetes_integration:
        enabled: true
        namespaces: ["nephoran-system", "default", "istio-system"]
        service_selector: "app.kubernetes.io/managed-by=nephoran"
        pod_selector: "nephoran.com/inject-certificate=true"
        secret_prefix: "nephoran"
        annotation_prefix: "nephoran.com"
        admission_webhook:
          enabled: true
          webhook_name: "nephoran-cert-injector"
          service_name: "nephoran-cert-webhook"
          service_namespace: "nephoran-system"
          cert_dir: "/etc/webhook/certs"
          port: 9443
      
      monitoring_integration:
        prometheus_enabled: true
        jaeger_enabled: true
        grafana_enabled: true
        custom_metrics_enabled: true
      
      alerting_config:
        enabled: true
        provisioning_failure_alert: true
        renewal_failure_alert: true
        validation_failure_alert: true
        revocation_alert: true
        alert_cooldown: 15m

    service_discovery:
      enabled: true
      watch_namespaces: ["nephoran-system", "default", "istio-system"]
      service_annotation_prefix: "nephoran.com"
      auto_provision_enabled: true
      pre_provisioning_enabled: true
      template_matching:
        enabled: true
        default_template: "default"
        fallback_behavior: "default"
        matching_rules:
          - name: "microservice"
            priority: 100
            label_selectors:
              app.kubernetes.io/component: "microservice"
            template: "microservice"
          - name: "public-facing"
            priority: 200
            annotation_selectors:
              nephoran.com/public-facing: "true"
            template: "public-facing"

    performance_cache:
      l1_cache_size: 1000
      l1_cache_ttl: 5m
      l2_cache_size: 5000
      l2_cache_ttl: 30m
      pre_provisioning_enabled: true
      pre_provisioning_size: 100
      pre_provisioning_ttl: 24h
      batch_operations_enabled: true
      batch_size: 20
      batch_timeout: 30s
      metrics_enabled: true
      cleanup_interval: 1h

    health_checker:
      enabled: true
      default_timeout: 30s
      default_interval: 10s
      default_healthy_threshold: 3
      default_unhealthy_threshold: 3
      concurrent_checks: 10
      retry_attempts: 3
      retry_delay: 5s
      tls_verification_enabled: true
      metrics_enabled: true

---
apiVersion: v1
kind: Secret
metadata:
  name: nephoran-cert-automation-tls
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
type: kubernetes.io/tls
data:
  # These would be generated by cert-manager or provided during setup
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t    # Base64 encoded private key

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2  # High availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nephoran-intent-operator
      app.kubernetes.io/component: certificate-automation
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nephoran-intent-operator
        app.kubernetes.io/component: certificate-automation
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        nephoran.com/inject-certificate: "true"
        nephoran.com/certificate-template: "microservice"
    spec:
      serviceAccountName: nephoran-cert-automation
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: cert-automation
        image: nephoran/cert-automation:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        - name: webhook
          containerPort: 9443
          protocol: TCP
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONFIG_PATH
          value: "/etc/config/config.yaml"
        - name: TLS_CERT_PATH
          value: "/etc/certs/tls.crt"
        - name: TLS_KEY_PATH
          value: "/etc/certs/tls.key"
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: tls-certs
          mountPath: /etc/certs
          readOnly: true
        - name: webhook-certs
          mountPath: /etc/webhook/certs
          readOnly: true
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: nephoran-cert-automation-config
          defaultMode: 0444
      - name: tls-certs
        secret:
          secretName: nephoran-cert-automation-tls
          defaultMode: 0444
      - name: webhook-certs
        secret:
          secretName: nephoran-cert-webhook-certs
          defaultMode: 0444
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: nephoran-intent-operator
                  app.kubernetes.io/component: certificate-automation
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
    nephoran.com/auto-certificate: "true"
    nephoran.com/certificate-template: "microservice"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    protocol: TCP
  selector:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation

---
apiVersion: v1
kind: Service
metadata:
  name: nephoran-cert-webhook
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
  annotations:
    nephoran.com/auto-certificate: "true"
    nephoran.com/certificate-template: "microservice"
spec:
  type: ClusterIP
  ports:
  - name: webhook
    port: 443
    targetPort: webhook
    protocol: TCP
  selector:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nephoran-intent-operator
      app.kubernetes.io/component: certificate-automation

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nephoran-cert-automation
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: certificate_provisioning_queue_size
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingAdmissionWebhook
metadata:
  name: nephoran-cert-injector
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
webhooks:
- name: cert-injector.nephoran.com
  clientConfig:
    service:
      name: nephoran-cert-webhook
      namespace: nephoran-system
      path: "/mutate"
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["apps"]
    apiVersions: ["v1"]
    resources: ["deployments"]
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["services"]
  namespaceSelector:
    matchExpressions:
    - key: name
      operator: NotIn
      values: ["kube-system", "kube-public"]
  objectSelector:
    matchExpressions:
    - key: nephoran.com/inject-certificate
      operator: In
      values: ["true"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: nephoran-cert-validator
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
webhooks:
- name: cert-validator.nephoran.com
  clientConfig:
    service:
      name: nephoran-cert-webhook
      namespace: nephoran-system
      path: "/validate"
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["secrets"]
  namespaceSelector:
    matchExpressions:
    - key: name
      operator: NotIn
      values: ["kube-system", "kube-public"]
  objectSelector:
    matchExpressions:
    - key: type
      operator: In
      values: ["kubernetes.io/tls"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nephoran-intent-operator
      app.kubernetes.io/component: certificate-automation
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http
  namespaceSelector:
    matchNames:
    - nephoran-system

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: nephoran-cert-automation-alerts
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
    prometheus: kube-prometheus
spec:
  groups:
  - name: nephoran.cert-automation
    rules:
    - alert: CertificateProvisioningFailure
      expr: rate(certificate_provisioning_failures_total[5m]) > 0.1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High certificate provisioning failure rate
        description: "Certificate provisioning failure rate is {{ $value }} failures per second over the last 5 minutes."
    
    - alert: CertificateRenewalFailure
      expr: rate(certificate_renewal_failures_total[5m]) > 0.05
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: High certificate renewal failure rate
        description: "Certificate renewal failure rate is {{ $value }} failures per second over the last 5 minutes."
    
    - alert: CertificateExpiryWarning
      expr: certificate_expiry_days < 30
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: Certificate expiring soon
        description: "Certificate {{ $labels.serial_number }} expires in {{ $value }} days."
    
    - alert: CertificateExpiryCritical
      expr: certificate_expiry_days < 7
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: Certificate expiring very soon
        description: "Certificate {{ $labels.serial_number }} expires in {{ $value }} days."
    
    - alert: CertAutomationDown
      expr: up{job="nephoran-cert-automation"} == 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: Certificate automation service is down
        description: "Certificate automation service has been down for more than 5 minutes."

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nephoran-cert-automation
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: nephoran-intent-operator
    app.kubernetes.io/component: certificate-automation
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: nephoran-intent-operator
      app.kubernetes.io/component: certificate-automation
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow metrics scraping from Prometheus
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: prometheus
    ports:
    - protocol: TCP
      port: 8080
  # Allow health checks from Kubernetes
  - from: []
    ports:
    - protocol: TCP
      port: 8081
  # Allow webhook calls from API server
  - from: []
    ports:
    - protocol: TCP
      port: 9443
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow Kubernetes API access
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  # Allow cert-manager API access
  - to:
    - namespaceSelector:
        matchLabels:
          name: cert-manager
    ports:
    - protocol: TCP
      port: 443
  # Allow service discovery and health checks
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443