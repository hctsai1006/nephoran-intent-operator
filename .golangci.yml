# Comprehensive golangci-lint configuration for code quality enforcement
# Targets 90%+ test coverage and maintains high code quality standards

run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  build-tags:
    - integration
    - e2e
  skip-dirs:
    - bin
    - vendor
    - .git
    - archive
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"
    - "zz_generated.*.go$"
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  # Code complexity and maintainability
  gocyclo:
    min-complexity: 12  # Stricter than default 10
  cyclop:
    max-complexity: 12
    package-average: 8.0
    skip-tests: true
  
  # Cognitive complexity
  gocognit:
    min-complexity: 15
  
  # Code duplication detection
  dupl:
    threshold: 80  # Lower threshold for stricter duplication detection
  
  # Function length
  funlen:
    lines: 80
    statements: 50
    ignore-comments: true
  
  # Line length
  lll:
    line-length: 120
    tab-width: 4
  
  # Nested if statements
  nestif:
    min-complexity: 4
  
  # Security linters
  gosec:
    severity: "low"
    confidence: "low"
    includes:
      - G101  # Look for hard coded credentials
      - G102  # Bind to all interfaces
      - G103  # Audit the use of unsafe block
      - G104  # Audit errors not checked
      - G106  # Audit the use of ssh.InsecureIgnoreHostKey
      - G107  # Url provided to HTTP request as taint input
      - G108  # Profiling endpoint automatically exposed on /debug/pprof
      - G109  # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110  # Potential DoS vulnerability via decompression bomb
      - G201  # SQL query construction using format string
      - G202  # SQL query construction using string concatenation
      - G203  # Use of unescaped data in HTML templates
      - G204  # Audit use of command execution
      - G301  # Poor file permissions used when creating a directory
      - G302  # Poor file permissions used with chmod
      - G303  # Creating tempfile using a predictable path
      - G304  # File path provided as taint input
      - G305  # File traversal when extracting zip/tar archive
      - G306  # Poor file permissions used when writing to a new file
      - G307  # Deferring a method which returns an error
      - G401  # Detect the usage of DES, RC4, MD5 or SHA1
      - G402  # Look for bad TLS connection settings
      - G403  # Ensure minimum RSA key length of 2048 bits
      - G404  # Insecure random number source (rand)
      - G501  # Import blocklist: crypto/md5
      - G502  # Import blocklist: crypto/des
      - G503  # Import blocklist: crypto/rc4
      - G504  # Import blocklist: net/http/cgi
      - G505  # Import blocklist: crypto/sha1
      - G601  # Implicit memory aliasing of items from a range statement
  
  # Error handling
  errorlint:
    errorf: true
    errorf-multi: true
    asserts: true
    comparison: true
  
  # Unused parameters and variables
  unparam:
    check-exported: true
  
  # Variable naming
  varnamelen:
    min-name-length: 2
    ignore-names:
      - err
      - id
      - ok
      - db
      - tx
      - wg
      - ctx
      - i
      - j
      - k
    ignore-decls:
      - c echo.Context
      - t testing.T
      - f *os.File
      - w http.ResponseWriter
      - r *http.Request
  
  # Code formatting
  gofumpt:
    extra-rules: true
  
  # Import grouping and formatting
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/nephoran-intent-operator)
    skip-generated: true
    custom-order: true
  
  # Test-related linters
  testpackage:
    skip-regexp: "(export|internal)_test\\.go"
  
  # Performance linters
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  
  # Memory efficiency
  maligned:
    suggest-new: true
  
  # Maintainability index
  maintidx:
    under: 20  # Stricter maintainability requirements
  
  # Whitespace linter
  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-cuddle-declarations: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0
    force-err-cuddling: false
    allow-separated-leading-comment: false
  
  # Godox linter for TODO/FIXME tracking
  godox:
    keywords:
      - NOTE
      - OPTIMIZE
      - HACK
      - TODO
      - FIXME
      - BUG

linters:
  disable-all: true
  enable:
    # Code quality and complexity
    - gocyclo
    - cyclop
    - gocognit
    - maintidx
    - funlen
    - nestif
    
    # Code duplication and similarity
    - dupl
    
    # Security
    - gosec
    
    # Error handling
    - errorlint
    - errcheck
    - errchkjson
    - errname
    
    # Performance
    - prealloc
    - maligned
    
    # Code style and formatting
    - gofumpt
    - gofmt
    - goimports
    - gci
    - lll
    - wsl
    - whitespace
    
    # Naming conventions
    - varnamelen
    - stylecheck
    
    # Unused code detection
    - unused
    - unparam
    - deadcode
    - structcheck
    - varcheck
    
    # Logic bugs
    - staticcheck
    - govet
    - ineffassign
    - unconvert
    - misspell
    - gocritic
    
    # Interface compliance
    - typecheck
    
    # Documentation
    - godot
    - godox
    
    # Test quality
    - testpackage
    - tparallel
    - thelper
    
    # Import management
    - nolintlint
    - depguard
    
    # Additional quality checks
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - durationcheck
    - exportloopref
    - forcetypeassert
    - goconst
    - goheader
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - grouper
    - importas
    - interfacebloat
    - makezero
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nosprintfhostport
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - tagliatelle
    - usestdlibvars
    - wastedassign

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new-from-rev: ""
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - maintidx
        - goconst
        - gomnd
    
    # Exclude generated files
    - path: .*\.pb\.go
      linters:
        - all
    
    # Exclude zz_generated files
    - path: zz_generated.*\.go
      linters:
        - all
    
    # Allow complex main functions
    - path: cmd/.*main\.go
      linters:
        - gocyclo
        - cyclop
        - maintidx
    
    # Allow longer lines in generated code
    - path: api/.*types\.go
      linters:
        - lll
    
    # Specific exclusions for known acceptable patterns
    - text: "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
      linters:
        - errcheck
    
    # Exclude certain godox keywords from main files
    - path: main\.go
      text: "Line contains TODO/BUG/FIXME"
      linters:
        - godox

severity:
  default-severity: error
  case-sensitive: true
  rules:
    - linters:
        - gosec
        - govet
        - errorlint
      severity: error
    - linters:
        - stylecheck
        - misspell
        - godot
      severity: warning
    - linters:
        - godox
        - dupl
      severity: info