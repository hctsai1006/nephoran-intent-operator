apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-api
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: rag-api
    app.kubernetes.io/component: data-retrieval
    app.kubernetes.io/part-of: nephoran-intent-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rag-api
  template:
    metadata:
      labels:
        app: rag-api
        app.kubernetes.io/name: rag-api
        app.kubernetes.io/component: data-retrieval
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: rag-api
        image: rag-api:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - "ALL"
        # Moderate resources for data retrieval operations
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: PORT
          value: "8080"
        - name: HEALTH_PORT
          value: "8081"
        - name: WEAVIATE_ENDPOINT
          value: "http://weaviate:8080"
        - name: CACHE_ENABLED
          value: "true"
        - name: CACHE_TTL_SECONDS
          value: "600"
        - name: MAX_SEARCH_RESULTS
          value: "50"
        - name: EMBEDDING_BATCH_SIZE
          value: "10"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /cache
      serviceAccountName: rag-api
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 512Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rag-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "nephoran.com/data-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: rag-api
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: rag-api
    app.kubernetes.io/component: data-retrieval
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: health
  selector:
    app: rag-api
  type: ClusterIP
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rag-api-pdb
  namespace: nephoran-system
  labels:
    app.kubernetes.io/name: rag-api
    app.kubernetes.io/component: data-retrieval
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: rag-api